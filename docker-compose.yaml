version: '3.8'

services:
  # The FastAPI application service
  web:
    build: ./
    container_name: fastapi_web
    # Updated command to match your app structure
    command: uvicorn app.main:app --host ${HOST} --port ${PORT} --reload
    volumes:
      # Mount the entire app directory for development
      - ./:/app
    ports:
      - "${PORT}:${PORT}"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - backend
    # Add healthcheck for the web service
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # The PostgreSQL database service
  postgres:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - backend

# Define named volumes for data persistence
volumes:
  postgres_data:

    # Define a custom network for inter-service communication
networks:
  backend:
    driver: bridge
